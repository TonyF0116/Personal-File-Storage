openapi: 3.0.0
info:
  title: Personal File Storage API
  description: API Documentation for person file storage system
  version: 1.0.0
servers:
  - url: "http://127.0.0.1:5000"
    description: localhost

components:
  securitySchemes:
    jwtTokenAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/account:
    post:
      security:
        - jwtTokenAuth: []
      summary: Handles account page redirecting JWT authorization validation
      tags:
        - Account
      parameters:
        - name: redirection
          in: query
          required: true
          description: URL to redirect to after logging in.
          schema:
            type: string

      responses:
        "200":
          description: Validation success. Authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Authorized
                  data:
                    type: object
                    properties:
                      redirection:
                        type: string
                        example: localhost
                      token:
                        type: string
                        example: Bearer {JWT}
        "401":
          description: Validation failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Unauthorized
                  data:
                    type: object
                    properties:
                      redirection:
                        type: string
                        example: localhost

  /api/account/signup:
    post:
      summary: Handles signup requests
      tags:
        - Account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: [username, password_hash]
              properties:
                username:
                  type: string
                  description: User entered username.
                password_hash:
                  type: string
                  description: SHA256 hash for the user entered password.
      responses:
        "200":
          description: Sign up successful. Client redirect to upload user info page.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Sign up successful
                  data:
                    type: object
                    properties:
                      account_id:
                        type: integer
                        example: 0
                      token:
                        type: string
                        example: Bearer {JWT}
        "400":
          description: Duplicate username. Display msg.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Username already existed.
                  data:
                    type: object
                    example: null

  /api/account/login:
    post:
      summary: Handles login requests
      tags:
        - Account
      parameters:
        - name: redirection
          in: query
          description: URL to redirect to after logging in.
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: [username, password_hash]
              properties:
                username:
                  type: string
                  description: User entered username.
                password_hash:
                  type: string
                  description: SHA256 hash for the user entered password.
      responses:
        "200":
          description: Login successful. Redirect to data.redirection.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      redirection:
                        type: string
                        example: localhost
                      token:
                        type: string
                        example: Bearer {JWT}
        "401":
          description: Incorrect credentials. Display msg.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Username doesn't exist. / Incorrect password.
                  data:
                    type: object
                    example: null

  /api/account/new_user_info:
    post:
      summary: Update user nickname and avatar suffix
      tags:
        - Account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: [avatar, avatar_name, nickname, account_id]
              properties:
                avatar:
                  type: string
                  description: Image data in base64.
                avatar_name:
                  type: string
                  description: Avatar file name.
                nickname:
                  type: string
                  description: User entered nickname.
                account_id:
                  type: integer
                  description: User account id.

      responses:
        "200":
          description: Upload successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Success
                  data:
                    type: object
                    example: null
        "500":
          description: Upload failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Unknown error. Check server terminal for more info.
                  data:
                    type: object
                    example: null

  /api/index:
    post:
      summary: Validate authorization and get basic user information
      tags:
        - Index
      security:
        - jwtTokenAuth: []
      responses:
        "200":
          description: Validation successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: null
                  data:
                    type: object
                    properties:
                      user_info:
                        type: object
                        properties:
                          AccountId:
                            type: integer
                            example: 1
                          UserName:
                            type: string
                            example: admin
                          NickName:
                            type: string
                            example: admin
                          Password:
                            type: string
                            example: password_hash
                          Administrator:
                            type: integer
                            example: 0 / 1
                          AvatarSuffix:
                            type: string
                            example: jpg / jpeg / png
                      user_files:
                        type: object
                        properties:
                          FileId:
                            type: integer
                            example: 1
                          AccountId:
                            type: integer
                            example: 1
                          FileName:
                            type: string
                            example: example.pdf
                          FileType:
                            type: integer
                            example: integer - 0 is pic, 1 is pdf, 2 is excel
                          LastModified:
                            type: string
                            example: 2023-01-01 00:00:00
        "302":
          description: Validation succeeded but not authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Unauthorized
                  data:
                    type: object
                    properties:
                      redirection:
                        type: string
                        example: localhost
        "401":
          description: Validation failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Validation failed
                  data:
                    type: object
                    properties:
                      redirection:
                        type: string
                        example: localhost

  /api/index/upload_file:
    post:
      summary: Upload file
      tags:
        - Index
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: [username, password_hash]
              properties:
                account_id:
                  type: integer
                  description: User account id.
                file:
                  type: object
                  description: File to upload. Transmitted in request.files['file'].
      responses:
        "200":
          description: Upload successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: File uploaded successfully.
                  data:
                    type: object
                    example: null
        "500":
          description: Error occurred when saving file.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Save file failed. Check server terminal for more info.
                  data:
                    type: object
                    example: null

  /api/index/download:
    get:
      summary: Retrieves and serves the requested file for download, based on the provided authorization and file ID.
      tags:
        - Index
      parameters:
        - name: Authorization
          in: query
          description: The authorization token
          required: true
          schema:
            type: string
        - name: file_id
          in: query
          description: The ID of the file to download
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                example: file
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Unauthorized
                  data:
                    type: object
                    example: null

  /api/index/file_stat_generation:
    post:
      summary: Generates a PDF file containing statistics of the user's files.
      tags:
        - Index
      parameters:
        - name: account_id
          in: query
          description: Account ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Generated successfully
                  data:
                    type: object
                    example: null
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Generated Failed. Check server terminal for more info.
                  data:
                    type: object
                    example: null

  /api/index/delete:
    delete:
      summary: Deletes the specified file if the user is authorized to access it.
      tags:
        - Index
      parameters:
        - name: Authorization
          in: query
          description: The authorization token
          required: true
          schema:
            type: string
        - name: file_id
          in: query
          description: The ID of the file to delete
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Deleted
                  data:
                    type: object
                    example: null
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Unauthorized
                  data:
                    type: object
                    example: null

  /api/index/new_excel_file:
    post:
      summary: Creates a new Excel file for the specified account.
      tags:
        - Index
      parameters:
        - name: account_id
          in: query
          description: Account ID
          required: true
          schema:
            type: string
        - name: file_name
          in: query
          description: Name of the new Excel file
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: File created successfully.
                  data:
                    type: object
                    example: null
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Create file failed. Check server terminal for more info.
                  data:
                    type: object
                    example: null

  /api/edit:
    post:
      summary: Validating authorization
      tags:
        - Edit
      security:
        - jwtTokenAuth: []
      responses:
        "200":
          description: Validation successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: null
                  data:
                    type: object
                    properties:
                      account_id:
                        type: integer
                        example: 1
        "302":
          description: Validation succeeded but not authorized. / No file_id provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Unauthorized / No file chosen
                  data:
                    type: object
                    properties:
                      redirection:
                        type: string
                        example: localhost
        "401":
          description: Validation failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Validation failed
                  data:
                    type: object
                    properties:
                      redirection:
                        type: string
                        example: localhost
